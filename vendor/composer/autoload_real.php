<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInitabad356d7c38dda67c3b96a2cd8e233f
=======
<<<<<<< HEAD
class ComposerAutoloaderInitb6e6984bc1fc5b7f9b061d9d5716b87e
=======
class ComposerAutoloaderInit36ad5b3488fe0a186f3d800f2e67d535
>>>>>>> 8521b93384d5547801628c6cf4d9f0edfb17fb57
>>>>>>> 639288d9e5c15f5bef2690fdaa65839ae43926c5
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInitabad356d7c38dda67c3b96a2cd8e233f', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitabad356d7c38dda67c3b96a2cd8e233f', 'loadClassLoader'));
=======
<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInitb6e6984bc1fc5b7f9b061d9d5716b87e', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitb6e6984bc1fc5b7f9b061d9d5716b87e', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInit36ad5b3488fe0a186f3d800f2e67d535', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit36ad5b3488fe0a186f3d800f2e67d535', 'loadClassLoader'));
>>>>>>> 8521b93384d5547801628c6cf4d9f0edfb17fb57
>>>>>>> 639288d9e5c15f5bef2690fdaa65839ae43926c5

        $map = require __DIR__ . '/autoload_namespaces.php';
        foreach ($map as $namespace => $path) {
            $loader->set($namespace, $path);
        }

        $map = require __DIR__ . '/autoload_psr4.php';
        foreach ($map as $namespace => $path) {
            $loader->setPsr4($namespace, $path);
        }

        $classMap = require __DIR__ . '/autoload_classmap.php';
        if ($classMap) {
            $loader->addClassMap($classMap);
        }

        $loader->register(true);

        return $loader;
    }
}
